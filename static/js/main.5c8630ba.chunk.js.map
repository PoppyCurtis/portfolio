{"version":3,"sources":["Images/background.JPG","Images/me2.JPG","getNavBar/getNavBar.js","Header/Header.js","AboutMe/AboutMe.js","WorkSamples/WorkSamples.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","navLinks","map","section","react_default","a","createElement","href","className","this","props","portfolioHeading","Component","mystyles","backgroundImage","concat","cover","height","backgroundSize","Header","style","title","button","AboutMe","src","Poppy","alt","WorkSamples","Boolean","window","location","hostname","match","App","getNavBar_getNavBar","src_Header_Header","src_AboutMe_AboutMe","src_WorkSamples_WorkSamples","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iRCmBzBC,gMAdP,IACMC,EADW,CAAC,OAAQ,WAAY,WAAY,SAAU,WAClCC,IAAI,SAAAC,GAC1B,OAASC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAM,IAAMJ,GAAUA,MAE1C,OACQC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcC,KAAKC,MAAMC,kBACvCP,EAAAC,EAAAC,cAAA,UACKL,WAVJW,8BCCfC,SAAW,CACbC,gBAAe,OAAAC,OAASC,IAAT,KACfC,OAAQ,OACRC,eAAgB,UAcLC,mLATP,OACIf,EAAAC,EAAAC,cAAA,UAAQc,MAAOP,GACfT,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMW,OAChBjB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,KAAGC,KAAM,WAAWE,KAAKC,MAAMY,gBAPtBV,6BC0BNW,0LA5BP,OACInB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKkB,IAAKC,IAAOC,IAAI,cACrBtB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,4fAKIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WANJ,0RAWAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,kXAvBMM,cCQPe,0LAPP,OACIvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAHDI,cCSNgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCPAC,mLAEE,OACI7B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAQd,MAAM,2BAA2BC,OAAO,mBAChDlB,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAahB,MAAM,aAPjBT,aAelB0B,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SDuG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5c8630ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.a2940ab3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/me2.b97029dd.JPG\";","import React, { Component } from 'react';\r\nimport './getNavBar.css';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const sections = [\"Home\", \"About Me\", \"Projects\", \"Skills\", \"Contact\"];\r\n        const navLinks = sections.map(section => {\r\n            return ( <li><a href={'#' + section}>{section}</a></li>);\r\n        })\r\n        return (\r\n                <nav > \r\n                    <h2 className=\"navheading\">{this.props.portfolioHeading}</h2>\r\n                    <ul >\r\n                        {navLinks}\r\n                    </ul>\r\n                </nav>\r\n        );\r\n    }\r\n}\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport cover from '../Images/background.JPG';\r\nimport './Header.css';\r\n\r\nconst mystyles = {\r\n    backgroundImage: `url(${cover})`,\r\n    height: \"75vh\",\r\n    backgroundSize: \"cover\",\r\n};\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header style={mystyles}>\r\n            <h1>{this.props.title}</h1>\r\n            <h3>Front-End Developer</h3>\r\n            <a href= \"#button\">{this.props.button}</a>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header","import React, { Component } from 'react';\r\nimport Poppy from \"../Images/me2.JPG\";\r\nimport './AboutMe.css';\r\n\r\nclass AboutMe extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"maindiv\">\r\n                <br />\r\n                <br />\r\n                <h1>About Me</h1>\r\n                <h2>Developer. Educationalist. Teacher.</h2>\r\n                <img src={Poppy} alt=\"Poppy Pic\" />\r\n                <h3>My Coding Journey</h3>\r\n                <p>Before learning how to code, I was working as a Secondary School Teacher in London. Whilst working as a Special Educational Needs teacher, I began\r\n                    to witness the power of technology on a firsthand basis. In particular, I was captivated by how tools such as applications,\r\n                    iPads and websites could enhance a person's ability to communicate. As the years\r\n                    passed I came to realise that I was vocationally oriented to creating new possibilities for others, which inevitably\r\n                    led to my change in career.\r\n                    <br />\r\n                    <br />\r\n                    For the past 6 months I have been learning how to code in JavaScript, ReactJS, CSS, C# and HTML.\r\n                    I have been learning independently and am taking part on a coding Bootcamp run by Kodiri.com. For me coding provides exciting\r\n                    opportunities including creativity and problem-solving.\r\n                </p>\r\n                <h3>Professional Develpment</h3>\r\n                <p>Over the past 6 months I have been commited to learning how to code. The first phase of my coding journey was self-taught. I started by\r\n                    completing numerous online tutorials by providers such as Udemy, PluralSight and Microsoft Virtual Academy. Since January 2019 I have been learning on \r\n                    at a coding Bootcamp in Bermondsey with a focus on JavaScript.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AboutMe;\r\n\r\n","import React, { Component } from 'react';\r\nimport './WorkSamples.css';\r\n\r\nclass WorkSamples extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"worksamples\">\r\n                \r\n             </div>\r\n                );\r\n            }\r\n        }\r\nexport default WorkSamples;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport NavBar from './getNavBar/getNavBar';\nimport Header from './Header/Header';\nimport AboutMe from './AboutMe/AboutMe';\nimport WorkSamples from './WorkSamples/WorkSamples';\nimport * as serviceWorker from './serviceWorker';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <Header title=\"Hi, I'm Penelope Curtis,\" button=\"View Portfolio\" />\n                <AboutMe />\n                <WorkSamples title=\"\"/>\n                \n            </div>\n            \n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}